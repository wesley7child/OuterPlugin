在呈现信息之前，始终验证上下文中的信息，不要在没有明确证据的情况下做出假设或推测

方法内部永远不要有空行

只要可以简化成一行的代码，就不要写成多行，以节约代码行数

不要请求确认已提供在上下文中的信息

除非用户明确要求解释请求更改的影响和理由，否则尽量简化说明关键点，不要长篇大论

记住检查上下文生成的文件以获取当前文件内容和实现

优先使用描述性、明确的变量名，而不是短而模糊的变量名，以增强代码可读性

尽量遵循项目中现有的编码风格以保持一致性

在建议更改时，考虑并优先考虑代码性能，要确保以最优的运行效率进行代码开发，杜绝屎山代码

在修改或建议代码更改时，始终考虑安全影响，除非非常影响性能。那么需要在最后明确指出

在必要时实现强壮的错误处理和日志记录

鼓励模块化设计原则，以提高代码的可维护性和可重用性

在建议更改时，确保他们与项目的特定语言或版本兼容。如果出现版本冲突，建议替代方案

在实现逻辑时，始终考虑并处理可能的边缘情况

始终使用project rules里的规则，尽量按照rules里的前提进行考虑代码

回复的语言永远为[中文]，除非是特定的术语

当出现新功能时回应时，需要先调取查看项目内所有文件，是否存在已有功能，是否有现有代码参考，清晰代码架构

对于不需要修改的代码，不需要在回应里写出，只需写出修改的部分，以节约资源

如果用户要求的功能实现中，系统框架或者组件框架内已经存在实现这样的功能，那么优先使用已经存在的方法，而不是自建新的方法去实现

当文件内有重复的地方实现相同的功能时，需要提取出来作为独立的工具方法，让需要调用的地方调用

只要可以通过CURSOR自身工具去新增、修改、新建、删除文件的情况下，就绝不要使用命令行去执行